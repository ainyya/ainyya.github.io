{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello My friend！",
    "subtitle": "",
    "icon": "https://ainyya.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://ainyya.github.io",
    "items": [
        {
            "id": "https://ainyya.github.io/2022/01/12/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%B3%BB%E5%88%97%E7%AC%AC%E4%B8%80%E8%AF%BE-%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B/",
            "url": "https://ainyya.github.io/2022/01/12/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%B3%BB%E5%88%97%E7%AC%AC%E4%B8%80%E8%AF%BE-%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B/",
            "title": "数学建模系列第一课--层次分析模型",
            "date_published": "2022-01-11T16:13:03.000Z",
            "content_html": "<h3 id=\"基本套路\"><a class=\"anchor\" href=\"#基本套路\">#</a> 基本套路</h3>\n<p>题目中一般会出现” 确定评价指标、形成评价体系 “等关键子眼。首先要回答以下三个问题：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.我们评价的目标是什么？</span><br><span class=\"line\">2.我们为了达到这个目标有哪几种可选的方案？</span><br><span class=\"line\">3.评价的准则或者说知指标是什么？（我们根据什么东西来评价好坏）</span><br></pre></td></tr></table></figure></p>\n<p>推荐的搜索平台：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyY2guY2hvbmdidWx1by5jb20v\">虫部落 - 快搜</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25raS5uZXQv\">知网</span>、<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcXZpcC5jb20v\">维普</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly94dWVzaHUuYmFpZHUuY29tLw==\">百度学术</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2FuZmFuZ2RhdGEuY29tLmNuL2luZGV4Lmh0bWw=\">万方</span></p>\n<p>判断矩阵：</p>\n<p><img data-src=\"%5CPost2_image1.png\" alt=\"两两判断\" /></p>\n<p><img data-src=\"%5CPost2_image2.png\" alt=\"评价指标\" /></p>\n<p>若矩阵中每个元素 <code>$a_&#123;ij&#125;$</code>  &gt; 0 且满足   <code>$ a_&#123;ij&#125; $</code>   x   <code>$ a_&#123;ji&#125; $</code>  = 1，则我们称该矩阵为正互反矩阵。在层次分析法中，我们构造的判断矩阵均是正互反矩阵。若正互反矩阵满足 <code>$ a_&#123;ij&#125; $</code>  x  <code>$ a_&#123;jk&#125; $</code>  =  <code>$ a_&#123;ik&#125; $</code> ，则我们称其为一致矩阵。</p>\n",
            "tags": [
                "数学建模",
                "博客"
            ]
        },
        {
            "id": "https://ainyya.github.io/2022/01/11/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98[2-9]/",
            "url": "https://ainyya.github.io/2022/01/11/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98[2-9]/",
            "title": "寒假每日一题",
            "date_published": "2022-01-11T15:30:44.744Z",
            "content_html": "<h2 id=\"笨拙的手指\"><a class=\"anchor\" href=\"#笨拙的手指\">#</a> 笨拙的手指</h2>\n<p>题目：</p>\n<p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">奶牛贝茜正在学习如何在不同进制之间转换数字。</span><br><span class=\"line\">但是她总是犯错误，因为她无法轻易的用两个前蹄握住笔。</span><br><span class=\"line\">每当贝茜将数字转换为一个新的进制并写下结果时，她总是将其中的某一位数字写错。</span><br><span class=\"line\"></span><br><span class=\"line\">例如，如果她将数字 <span class=\"number\">14</span></span><br><span class=\"line\">转换为二进制数，那么正确的结果应为 <span class=\"number\">1110</span>，但她可能会写下 <span class=\"number\">0110</span> 或 <span class=\"number\">1111</span>。</span><br><span class=\"line\">贝茜不会额外添加或删除数字，但是可能会由于写错数字的原因，写下包含前导 <span class=\"number\">0</span>的数字。</span><br><span class=\"line\"></span><br><span class=\"line\">给定贝茜将数字N转换为二进制数字以及三进制数字的结果，请确定 N的正确初始值（十进制表示）。</span><br><span class=\"line\"></span><br><span class=\"line\">输入格式</span><br><span class=\"line\"></span><br><span class=\"line\">第一行包含N的二进制表示，其中一位是错误的。</span><br><span class=\"line\"></span><br><span class=\"line\">第二行包含N的三进制表示，其中一位是错误的。</span><br><span class=\"line\"></span><br><span class=\"line\">输出格式</span><br><span class=\"line\">输出正确的N的值。</span><br><span class=\"line\">数据范围<span class=\"number\">0</span>≤N≤<span class=\"number\">10</span>^<span class=\"number\">9</span>，且存在唯一解。</span><br><span class=\"line\">时/空限制： <span class=\"number\">1</span>s / <span class=\"number\">64</span>MB</span><br><span class=\"line\">输入样例：</span><br><span class=\"line\"><span class=\"number\">1010</span></span><br><span class=\"line\"><span class=\"number\">212</span></span><br><span class=\"line\">输出样例：</span><br><span class=\"line\"><span class=\"number\">14</span></span><br><span class=\"line\">样例解释</span><br><span class=\"line\"><span class=\"number\">14</span></span><br><span class=\"line\">在二进制下的正确表示为 <span class=\"number\">1110</span>，在三进制下的正确表示为 <span class=\"number\">112</span>。</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMjA2MC8=\">原题链接</span></p>\n<p>算法分析：</p>\n<p>这里先贴一个关于事件复杂度的分析表：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一般ACM或者笔试题的时间限制是1秒或2秒。</span><br><span class=\"line\">在这种情况下，C++代码中的操作次数控制在 10^7∼10^8为最佳。</span><br><span class=\"line\"></span><br><span class=\"line\">下面给出在不同数据范围下，代码的时间复杂度和算法该如何选择：</span><br><span class=\"line\"></span><br><span class=\"line\">1.n≤30, 指数级别, dfs+剪枝，状态压缩dp</span><br><span class=\"line\">2.n≤100=&gt; O(n3)，floyd，dp，高斯消元</span><br><span class=\"line\">3.n≤1000=&gt; O(n2)，O(n2logn)，dp，二分，朴素版Dijkstra、朴素版Prim、Bellman-Ford</span><br><span class=\"line\">4.n≤10000=&gt; O(n∗n√)，块状链表、分块、莫队</span><br><span class=\"line\">5.n≤100000=&gt; O(nlogn)=&gt; 各种sort，线段树、树状数组、set/map、heap、拓扑排序、dijkstra+heap、prim+heap、Kruskal、       spfa、求凸包、求半平面交、二分、CDQ分治、整体二分、后缀数组、树链剖分、动态树</span><br><span class=\"line\">6.n≤1000000=&gt; O(n), 以及常数较小的 O(nlogn) 算法 =&gt; 单调队列、 hash、双指针扫描、并查集，kmp、AC自动机，常数比较小的       O(nlogn)的做法：sort、树状数组、heap、dijkstra、spfa</span><br><span class=\"line\">7.n≤10000000=&gt; O(n)，双指针扫描、kmp、AC自动机、线性筛素数</span><br><span class=\"line\">8.n≤10^9=&gt; O(n√)，判断质数</span><br><span class=\"line\">9.n≤10^18=&gt; O(logn)，最大公约数，快速幂，数位DP</span><br><span class=\"line\">10.n≤10^1000=&gt; O((logn)2)，高精度加减乘除</span><br><span class=\"line\">11.n≤10^100000=&gt; O(logk×loglogk)，k表示位数，高精度加减、FFT/NTT</span><br></pre></td></tr></table></figure></p>\n<p>根据题目所给的数据范围，很明显我们不能通过暴力枚举的方式进行筛选。但是我们可以换个思路，$$ 10^9 $$ 的二进制位数大概是 30 位，转为 10 进制也是将这 30 位遍历，所以时间复杂度是 1000 级别的。同理，三进制转 10 进制也是 1000 级别的。这样子，我们就可以筛选出较少的数据进行比较。这里，我们用到了的哈希表，先往哈希表中插入二进制的不同十进制数，然后改变三进制数，在哈希表中查找是否存在与这个三进制数对应的十进制数，如果有则说明找到原来的数字，否则不存在返回 0。</p>\n<p>完整代码如下：</p>\n<p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unordered_set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*秦九邵算法*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get</span><span class=\"params\">(string s, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; c : s)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        res = res * b + c - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string a, b;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    </span><br><span class=\"line\">    unordered_set&lt;<span class=\"keyword\">int</span>&gt; S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; c : a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">        S.<span class=\"built_in\">insert</span>(<span class=\"built_in\">get</span>(a, <span class=\"number\">2</span>));</span><br><span class=\"line\">        c ^= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span>&amp; c : b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> t = c;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i + <span class=\"string\">&#x27;0&#x27;</span> != t)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                c = i + <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> x = <span class=\"built_in\">get</span>(b, <span class=\"number\">3</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (S.<span class=\"built_in\">count</span>(x))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    cout &lt;&lt; x &lt;&lt; endl;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr />\n",
            "tags": [
                "程序",
                "博客"
            ]
        },
        {
            "id": "https://ainyya.github.io/2022/01/11/hello-world/",
            "url": "https://ainyya.github.io/2022/01/11/hello-world/",
            "title": "Hello World",
            "date_published": "2022-01-11T08:41:56.944Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}